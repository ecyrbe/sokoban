{"version":3,"sources":["components/sokoban.module.css","components/help.tsx","hooks/levels.ts","hooks/sokoban.ts","utils/classnames.ts","utils/block-styles.ts","Game.tsx","hooks/keyboard.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","Block","Help","React","memo","className","style","help","descriptions","instructions","Direction","State","levelBlocks","empty","$","box","objective","boxjective","wall","player","loadLevels","Atlas01","Atlas02","Atlas03","Atlas04","reduce","acc","levels","LevelCollection","Level","map","level","name","Id","shape","L","row","Array","from","item","width","Number","Width","height","Height","dirPositions","Map","getPlayerPosition","findIndex","blocks","some","block","column","Error","useSokoban","useState","localStorage","getItem","index","setIndex","useMemo","loadNext","useCallback","setItem","String","useLevels","playing","state","setState","initboard","playerPosition","board","setBoard","move","direction","dir","get","directionToPosition","position","nextPosition","next","includes","line","playerJective","completed","restart","useEffect","set","Left","Top","Right","Bottom","cn","names","join","styles","styleFrom","Game","callback","codes","options","keydown","keyup","cb","useRef","current","downHandler","event","code","upHandler","window","addEventListener","removeEventListener","useKeyBoard","preventDefault","levelPrefix","levelTitle","element","levelState","helpNext","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e16f0be5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"state\":\"sokoban_state__3BNgf\",\"board\":\"sokoban_board__2ohVF\",\"level\":\"sokoban_level__1q9uE\",\"levelPrefix\":\"sokoban_levelPrefix__2urEE\",\"levelTitle\":\"sokoban_levelTitle__3tPy3\",\"levelState\":\"sokoban_levelState__2CU_c\",\"helpNext\":\"sokoban_helpNext__34Vzc\",\"bounce\":\"sokoban_bounce__3yVX1\",\"help\":\"sokoban_help__1W438\",\"descriptions\":\"sokoban_descriptions__2A3k9\",\"instructions\":\"sokoban_instructions__21-oW\",\"element\":\"sokoban_element__1y5L6\",\"empty\":\"sokoban_empty__37CAP\",\"wall\":\"sokoban_wall__1v6xG\",\"objective\":\"sokoban_objective__1mxlS\",\"box\":\"sokoban_box__1sACT\",\"boxjective\":\"sokoban_boxjective__2Py-k\",\"player\":\"sokoban_player__aGSOk\",\"playerJective\":\"sokoban_playerJective__b5k0j\"};","import React from \"react\";\nimport style from \"./sokoban.module.css\";\n\nfunction HelpImpl() {\n  return (\n    <div className={style.help}>\n      <div className={style.descriptions}>\n        <div>&uarr;</div>\n        <div>&larr;&nbsp;&rarr;</div>\n        <div>&darr;</div>\n        <div>escape</div>\n      </div>\n      <div className={style.instructions}>\n        <div> Move</div>\n        <div> Move</div>\n        <div> Move</div>\n        <div> restart level</div>\n      </div>\n    </div>\n  );\n}\n\nexport const Help = React.memo(HelpImpl);\n","import { useState, useMemo, useCallback } from \"react\";\nimport Atlas01 from \"../datas/Atlas01.json\";\nimport Atlas02 from \"../datas/Atlas02.json\";\nimport Atlas03 from \"../datas/Atlas03.json\";\nimport Atlas04 from \"../datas/Atlas04.json\";\n\nexport type Level = {\n  name: string;\n  shape: Block[][];\n  width: number;\n  height: number;\n};\n\nexport interface SokobanLevels {\n  Title: string;\n  Description: string;\n  Email: string;\n  LevelCollection: LevelCollection;\n}\n\nexport interface LevelCollection {\n  Level: SokobanLevel[];\n}\n\nexport interface SokobanLevel {\n  Id: string;\n  Width: string;\n  Height: string;\n  L: string[];\n}\n\nexport enum Block {\n  empty,\n  box,\n  objective,\n  boxjective,\n  wall,\n  player,\n  playerJective = 7,\n}\n\nconst levelBlocks = {\n  \" \": Block.empty,\n  $: Block.box,\n  \".\": Block.objective,\n  \"*\": Block.boxjective,\n  \"#\": Block.wall,\n  \"@\": Block.player,\n};\n\ntype LevelBlock = keyof typeof levelBlocks;\n\nconst SOKOBAN_LEVEL_KEY = \"SokobanLevel\";\n\nfunction loadLevels() {\n  const AllLevels = [Atlas01, Atlas02, Atlas03, Atlas04] as SokobanLevels[];\n  return AllLevels.reduce<Level[]>(\n    (acc, levels) => [\n      ...acc,\n      ...levels.LevelCollection.Level.map((level) => ({\n        name: level.Id,\n        shape: level.L.map((row) =>\n          Array.from(row).map((item) => levelBlocks[item as LevelBlock])\n        ),\n        width: Number(level.Width),\n        height: Number(level.Height),\n      })),\n    ],\n    []\n  );\n}\n\nexport function useLevels() {\n  const [levels] = useState<Level[]>(loadLevels);\n  const [index, setIndex] = useState(() =>\n    Number(localStorage.getItem(SOKOBAN_LEVEL_KEY))\n  );\n  const level = useMemo(() => levels[index], [levels, index]);\n  const loadNext = useCallback(() => {\n    setIndex(index + 1);\n    localStorage.setItem(SOKOBAN_LEVEL_KEY, String(index + 1));\n  }, [index]);\n\n  return { index, level, loadNext };\n}\n","import { useEffect, useState, useCallback } from \"react\";\nimport { Level, Block, useLevels } from \"./levels\";\n\nexport enum Direction {\n  Left,\n  Top,\n  Right,\n  Bottom,\n}\n\nexport enum State {\n  playing,\n  completed,\n}\n\ntype Position = {\n  row: number;\n  column: number;\n};\n\nconst dirPositions = new Map<Direction, Position>();\ndirPositions.set(Direction.Left, { row: 0, column: -1 });\ndirPositions.set(Direction.Top, { row: -1, column: 0 });\ndirPositions.set(Direction.Right, { row: 0, column: 1 });\ndirPositions.set(Direction.Bottom, { row: 1, column: 0 });\n\nfunction directionToPosition(direction: Direction) {\n  return dirPositions.get(direction)!;\n}\n\ntype Board = Level & {\n  playerPosition: Position;\n};\n\nfunction getPlayerPosition<T extends Level>(level: T): Position {\n  const row = level.shape.findIndex((blocks) =>\n    blocks.some((block) => block === Block.player)\n  );\n  if (row >= 0) {\n    const column = level.shape[row].findIndex(\n      (block) => block === Block.player\n    );\n    return { row, column };\n  }\n  throw new Error(\"Invalid level, Player position not found\");\n}\n\nexport function useSokoban() {\n  const { index, level, loadNext } = useLevels();\n  const [state, setState] = useState<State>(State.playing);\n  const initboard = useCallback(\n    () => ({\n      ...level,\n      playerPosition: getPlayerPosition(level),\n    }),\n    [level]\n  );\n  const [board, setBoard] = useState<Board>(initboard);\n  const move = useCallback(\n    (direction: Direction) => {\n      if (state === State.playing) {\n        const dir = directionToPosition(direction);\n        const position = { ...board.playerPosition };\n        const nextPosition: Position = {\n          row: board.playerPosition.row + dir.row,\n          column: board.playerPosition.column + dir.column,\n        };\n        let next = {\n          ...board,\n        };\n        if (\n          [Block.box, Block.boxjective].includes(\n            board.shape[nextPosition.row][nextPosition.column]\n          ) &&\n          [Block.empty, Block.objective].includes(\n            board.shape[nextPosition.row + dir.row][\n              nextPosition.column + dir.column\n            ]\n          )\n        ) {\n          next.shape = next.shape.map((line, row) =>\n            line.map((block, column) =>\n              nextPosition.row === row && nextPosition.column === column\n                ? block - Block.box\n                : block\n            )\n          );\n          next.shape = next.shape.map((line, row) =>\n            line.map((block, column) =>\n              nextPosition.row + dir.row === row &&\n              nextPosition.column + dir.column === column\n                ? block + Block.box\n                : block\n            )\n          );\n        }\n        if (\n          [Block.empty, Block.objective].includes(\n            next.shape[nextPosition.row][nextPosition.column]\n          )\n        ) {\n          next.shape[position.row][position.column] -= Block.player;\n          next.playerPosition = nextPosition;\n          next.shape[nextPosition.row][nextPosition.column] += Block.player;\n          setBoard(next);\n          if (\n            !next.shape.some((row) =>\n              row.some((block) =>\n                [Block.objective, Block.playerJective].includes(block)\n              )\n            )\n          )\n            setState(State.completed);\n        }\n      }\n    },\n    [board, state]\n  );\n\n  const next = useCallback(() => {\n    if (state === State.completed) {\n      loadNext();\n      setState(State.playing);\n    }\n  }, [state, loadNext]);\n  const restart = useCallback(() => {\n    if (state === State.playing) {\n      setBoard(initboard());\n    }\n  }, [state, initboard]);\n\n  useEffect(() => {\n    if (board.name !== level.name) setBoard(initboard());\n  }, [board, state, level, loadNext, next, restart, initboard, move]);\n\n  return { index, level: board, state, move, next, restart };\n}\n","export const cn = (...names: string[]) => names.join(\" \");\n","import { Block } from \"../hooks/levels\";\nimport style from \"../components/sokoban.module.css\";\n\nconst styles = new Map<Block, string>();\nstyles.set(Block.empty, style.empty);\nstyles.set(Block.box, style.box);\nstyles.set(Block.boxjective, style.boxjective);\nstyles.set(Block.objective, style.objective);\nstyles.set(Block.wall, style.wall);\nstyles.set(Block.player, style.player);\nstyles.set(Block.playerJective, style.playerJective);\n\nexport function styleFrom(block: Block) {\n  return styles.get(block);\n}\n","import React from \"react\";\nimport \"./Game.css\";\nimport { Help } from \"./components/help\";\nimport { useSokoban, Direction, State } from \"./hooks/sokoban\";\nimport { useKeyBoard } from \"./hooks/keyboard\";\nimport style from \"./components/sokoban.module.css\";\nimport { cn } from \"./utils/classnames\";\nimport { styleFrom } from \"./utils/block-styles\";\n\nfunction Game() {\n  const { index, level, state, move, next, restart } = useSokoban();\n  useKeyBoard(\n    (event) => {\n      switch (event.code) {\n        case \"ArrowUp\":\n          move(Direction.Top);\n          break;\n        case \"ArrowDown\":\n          move(Direction.Bottom);\n          break;\n        case \"ArrowLeft\":\n          move(Direction.Left);\n          break;\n        case \"ArrowRight\":\n          move(Direction.Right);\n          break;\n        case \"Enter\":\n          next();\n          break;\n        case \"Escape\":\n          restart();\n          break;\n      }\n      event.preventDefault();\n    },\n    [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\", \"Enter\", \"Escape\"]\n  );\n  return (\n    <div className=\"game\">\n      <div className={style.state}>\n        <div className={style.levelPrefix}>Level {index + 1} :</div>\n        <div className={style.levelTitle}>{level.name}</div>\n      </div>\n\n      <div className={style.board}>\n        {level.shape.map((row) => (\n          <div className={style.level}>\n            {row.map((block) => (\n              <div className={cn(style.element, styleFrom(block)!)} />\n            ))}\n          </div>\n        ))}\n      </div>\n      <Help />\n      {state === State.completed && (\n        <div className={style.state}>\n          <div className={style.levelState}>LEVEL completed </div>\n          <div className={style.helpNext}>Press ENTER to load next LEVEL</div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Game;\n","import { useEffect, useRef } from \"react\";\n\n/**\n * hook to listen for keyboard events and trigger a callback\n * @param callback callback to call when requested keys event are detected\n * @param codes an array of code representing the keys to listen events from\n * @param options control what events to listen (keydown by default)\n */\nexport function useKeyBoard(\n  callback: (event: KeyboardEvent) => void,\n  codes: string[],\n  options: {\n    keyup?: boolean;\n    keydown?: boolean;\n  } = { keydown: true, keyup: false }\n) {\n  const cb = useRef(callback);\n\n  useEffect(() => {\n    cb.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const downHandler = (event: KeyboardEvent) => {\n      if (codes.includes(event.code)) {\n        cb.current(event);\n      }\n    };\n    const upHandler = (event: KeyboardEvent) => {\n      if (codes.includes(event.code)) {\n        cb.current(event);\n      }\n    };\n    if (options.keydown) window.addEventListener(\"keydown\", downHandler);\n    if (options.keyup) window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [cb, codes, options.keyup, options.keydown]);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Game\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}